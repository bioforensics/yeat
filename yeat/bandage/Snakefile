# -------------------------------------------------------------------------------------------------
# Copyright (c) 2022, DHS. This file is part of YEAT: http://github.com/bioforensics/yeat
#
# This software was prepared for the Department of Homeland Security (DHS) by the Battelle National
# Biodefense Institute, LLC (BNBI) as part of contract HSHQDC-15-C-00064 to manage and operate the
# National Biodefense Analysis and Countermeasures Center (NBACC), a Federally Funded Research and
# Development Center.
# -------------------------------------------------------------------------------------------------

from pathlib import Path
import re


rule all:
    input:
        expand("analysis/bandage/{assembler}/.done", assembler=config["assemblers"])


rule spades:
    output:
        "analysis/bandage/spades/.done"
    input:
        "analysis/spades/assembly_graph_after_simplification.gfa",
        "analysis/spades/assembly_graph_with_scaffolds.gfa",
        "analysis/spades/assembly_graph.fastg",
        "analysis/spades/strain_graph.gfa"
    params:
        bandage=config["bandage"]
    run:
        for gfa in input:
            filename = Path(gfa).stem
            shell("{params.bandage} image {gfa} analysis/bandage/spades/{filename}.jpg")
        shell("touch {output[0]}")


rule megahit:
    output:
        "analysis/bandage/megahit/.done"
    input:
        "analysis/megahit/intermediate_contigs/k21.contigs.fa",
        "analysis/megahit/intermediate_contigs/k29.contigs.fa",
        "analysis/megahit/intermediate_contigs/k39.contigs.fa",
        "analysis/megahit/intermediate_contigs/k59.contigs.fa",
        "analysis/megahit/intermediate_contigs/k79.contigs.fa",
        "analysis/megahit/intermediate_contigs/k99.contigs.fa",
        "analysis/megahit/intermediate_contigs/k119.contigs.fa",
        "analysis/megahit/intermediate_contigs/k141.contigs.fa"
    params:
        bandage=config["bandage"]
    run:
        fastg_files = []
        for fa in input:
            kmer = re.findall(r'\d+', fa)[0]
            filename = Path(fa).stem
            fastg_files.append(f"analysis/megahit/intermediate_contigs/{filename}.fastg")
            shell("megahit_toolkit contig2fastg {kmer} {fa} > analysis/megahit/intermediate_contigs/{filename}.fastg")
        for fastg in fastg_files:
            filename = Path(fastg).stem
            shell("{params.bandage} image {fastg} analysis/bandage/megahit/{filename}.jpg")
        shell("touch {output[0]}")


rule unicycler:
    output:
        "analysis/bandage/unicycler/.done"
    input:
        "analysis/unicycler/001_best_spades_graph.gfa",
        "analysis/unicycler/002_overlaps_removed.gfa",
        "analysis/unicycler/003_bridges_applied.gfa",
        "analysis/unicycler/004_final_clean.gfa",
        "analysis/unicycler/005_polished.gfa",
        "analysis/unicycler/assembly.gfa"
    params:
        bandage=config["bandage"]
    run:
        for gfa in input:
            filename = Path(gfa).stem
            shell("{params.bandage} image {gfa} analysis/bandage/unicycler/{filename}.jpg")
        shell("touch {output[0]}")

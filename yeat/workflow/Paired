# -------------------------------------------------------------------------------------------------
# Copyright (c) 2021, DHS. This file is part of YEAT: http://github.com/bioforensics/yeat
#
# This software was prepared for the Department of Homeland Security (DHS) by the Battelle National
# Biodefense Institute, LLC (BNBI) as part of contract HSHQDC-15-C-00064 to manage and operate the
# National Biodefense Analysis and Countermeasures Center (NBACC), a Federally Funded Research and
# Development Center.
# -------------------------------------------------------------------------------------------------

rule spades:
    output:
        contigs="analysis/{sample}/paired/{label}/spades/contigs.fasta"
    input:
        read1="seq/downsample/{sample}/paired/{sample}.R1.fq.gz",
        read2="seq/downsample/{sample}/paired/{sample}.R2.fq.gz"
    threads: 128
    params:
        outdir="analysis/{sample}/paired/{label}/spades",
        extra_args=lambda wildcards: config["assemblies"][wildcards.label].extra_args
    shell:
        """
        spades.py -1 {input.read1} -2 {input.read2} -t {threads} -o {params.outdir} {params.extra_args}
        """


rule megahit:
    output:
        contigs="analysis/{sample}/paired/{label}/megahit/contigs.fasta"
    input:
        read1="seq/downsample/{sample}/paired/{sample}.R1.fq.gz",
        read2="seq/downsample/{sample}/paired/{sample}.R2.fq.gz"
    threads: 128
    params:
        temp_dir="analysis/{sample}/paired/{label}/megahit-temp",
        actual_dir="analysis/{sample}/paired/{label}/megahit",
        extra_args=lambda wildcards: config["assemblies"][wildcards.label].extra_args
    shell:
        """
        megahit -1 {input.read1} -2 {input.read2} -t {threads} -o {params.temp_dir} {params.extra_args}
        mv {params.temp_dir}/* {params.actual_dir}
        rm -r {params.temp_dir}
        ln -s final.contigs.fa {output.contigs}
        """


rule unicycler:
    output:
        contigs="analysis/{sample}/paired/{label}/unicycler/contigs.fasta"
    input:
        read1="seq/downsample/{sample}/paired/{sample}.R1.fq.gz",
        read2="seq/downsample/{sample}/paired/{sample}.R2.fq.gz"
    threads: 128
    params:
        outdir="analysis/{sample}/paired/{label}/unicycler",
        extra_args=lambda wildcards: config["assemblies"][wildcards.label].extra_args
    shell:
        """
        unicycler -1 {input.read1} -2 {input.read2} -t {threads} -o {params.outdir} {params.extra_args}
        ln -s assembly.fasta {output.contigs}
        """


rule penguin:
    output:
        contigs="analysis/{sample}/paired/{label}/penguin/contigs.fasta"
    input:
        read1="seq/downsample/{sample}/paired/{sample}.R1.fq.gz",
        read2="seq/downsample/{sample}/paired/{sample}.R2.fq.gz"
    threads: 128
    params:
        outdir="analysis/{sample}/paired/{label}/penguin",
        extra_args=lambda wildcards: config["assemblies"][wildcards.label].extra_args
    shell:
        """
        penguin guided_nuclassemble {input.read1} {input.read2} {params.outdir}/unpolished_contigs.fasta {params.outdir} --threads {threads} {params.extra_args}
        bowtie2-build {params.outdir}/unpolished_contigs.fasta {params.outdir}/unpolished_contigs.fasta
        bowtie2 -p {threads} -x {params.outdir}/unpolished_contigs.fasta -1 {input.read1} -2 {input.read2} 2> {params.outdir}/unpolished_contigs.bowtie.log | samtools view -b -@ {threads} | samtools sort -@ {threads} -o {params.outdir}/unpolished_contigs.sorted.bam
        samtools index {params.outdir}/unpolished_contigs.sorted.bam
        pilon --genome {params.outdir}/unpolished_contigs.fasta --bam {params.outdir}/unpolished_contigs.sorted.bam --output {params.outdir}/contigs
        """


rule velvet:
    output:
        contigs="analysis/{sample}/paired/{label}/velvet/contigs.fasta"
    input:
        read1="seq/downsample/{sample}/paired/{sample}.R1.fq.gz",
        read2="seq/downsample/{sample}/paired/{sample}.R2.fq.gz",
        genome_size="seq/downsample/{sample}/paired/genome_size.txt"
    threads: 128
    params:
        temp_dir="analysis/{sample}/paired/{label}/velvet-temp",
        actual_dir="analysis/{sample}/paired/{label}/velvet",
        extra_args=lambda wildcards: config["assemblies"][wildcards.label].extra_args,
        low=lambda wildcards: config["assemblies"][wildcards.label].low,
        high=lambda wildcards: config["assemblies"][wildcards.label].high,
        step=lambda wildcards: config["assemblies"][wildcards.label].step,
        reads=lambda wildcards, input: f"'-shortPaired -fastq.gz -separate {input.read1} {input.read2}'",
        
    run:
        genome_size = get_genome_size1(input.genome_size)
        shell("VelvetOptimiser.pl -s {params.low} -e {params.high} -x {params.step} -g {genome_size} -f {params.reads} -t {threads} -d {params.temp_dir} {params.extra_args}")
        shell("mv {params.temp_dir}/* {params.actual_dir}")
        shell("rm -r {params.temp_dir}")
        shell("ln -s contigs.fa {output.contigs}")
